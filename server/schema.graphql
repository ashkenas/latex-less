type NamedText {
  _id: ID!
  name: String!
  text: String!
}

input NamedTextInput {
  _id: ID!
  name: String!
  text: String!
}

type Project {
  _id: ID!
  name: String!
  lastEdited: Int!
  equations: [NamedText]!
  responses: [NamedText]!
}

type User {
  _id: ID!
  firebaseId: String!
  equations: [NamedText]!
  projects: [Project]!
}

type Query {
  userProjects(id: ID!): [Project]!
  userEquations(id: ID!): [NamedText]!
  project(id: ID!): Project
  equation(id: ID!): NamedText
  response(id: ID!): NamedText
}

type Mutation {
  updateProject(id: ID!, equations: [NamedTextInput], responses: [NamedTextInput]): Project!
  removeProjectEquation(id: ID!): Project!
  removeProjectResponse(id: ID!): Project!
  updateEquation(id: ID!, name: String, text: String): NamedText!
  removeUserEquation(id: ID!): NamedText!
}
