type NamedText {
  _id: ID!
  name: String!
  text: String!
}

input NamedTextInput {
  _id: ID!
  name: String!
  text: String!
}

type Project {
  _id: ID!
  name: String!
  lastEdited: Float!
  equations: [NamedText!]!
  responses: [NamedText!]!
}

type User {
  _id: ID!
  firebaseId: String!
  equations: [NamedText]!
  projects: [Project]!
}

type Query {
  userProjects: [Project!]!
  userEquations: [NamedText!]!
  project(id: ID!): Project!
  equation(id: ID!): NamedText!
  projectEquation(pid: ID!, eid: ID!): NamedText!
}

type Mutation {
  newProject: Project!
  updateProject(id: ID!, name: String, equations: [NamedTextInput], responses: [NamedTextInput]): Project!
  updateEquation(id: ID!, name: String!, text: String!): NamedText!
  addProjectEquation(id: ID!): NamedText!
  addProjectResponse(id: ID!): NamedText!
  removeProjectEquation(pid: ID!, id: ID!): Project!
  removeProjectResponse(pid: ID!, id: ID!): Project!
  removeUserEquation(id: ID!): User!
}
